@using Omnius.UI.Models

@model IndexViewModel

@{
    ViewData["Title"] = "Реестр потребителей";
}

<div class="container" style="overflow-x:auto;">
    <h3>Реестр потребителей</h3>

    <a asp-action="Create"
       class="btn btn-success">
        <i class="glyphicon glyphicon-chevron-right"></i>
        Добавить
    </a>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    Фамилия @*@Html.DisplayNameFor(model => model.Customers)*@
                </th>
                <th>
                    Имя @*@Html.DisplayNameFor(model => model.Name)*@
                </th>
                <th>
                    Отчество @*@Html.DisplayNameFor(model => model.PaternalName)*@
                </th>
                <th>
                    Пол
                </th>
                <th>
                    Дата рождения @*@Html.DisplayNameFor(model => model.DateOfBirth)*@
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Customers)
            {
                <tr onclick="location.href = '@(Url.Action("Edit", "Customer", new { id = item.ID, currentPage = Model.PageViewModel.PageNumber }))'" style="cursor: pointer;">
                    <td>
                        @Html.DisplayFor(modelItem => item.FamilyName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PaternalName)
                    </td>
                    <td>
                        @switch (item.Sex)
                        {
                            case true:
                                <p>Мужчина</p>
                                break;
                            case false:
                                <p>Женщина</p>
                                break;
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfBirth)
                    </td>
                    <td>
                        @Html.ActionLink("Удалить", "Delete", new { id = item.ID })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.PageViewModel.HasPreviousPage)
    {
    <a asp-action="List"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад (страница @(Model.PageViewModel.PageNumber - 1) из @(Model.PageViewModel.TotalPages))
    </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="List"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           class="btn btn-default btn">
            <i class="glyphicon glyphicon-chevron-right"></i>
            Вперед
        </a>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="List"
           asp-route-page="@(Model.PageViewModel.TotalPages)"
           class="btn btn-default btn">
            <i class="glyphicon glyphicon-chevron-right"></i>
            Последняя страница (@(Model.PageViewModel.TotalPages))
        </a>
    }
</div>

@{
    Layout = "_Layout";
}