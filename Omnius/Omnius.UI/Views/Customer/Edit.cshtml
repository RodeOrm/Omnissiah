@model Omnius.Domain.Entities.Customer

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validation.unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>
    <h3>Редактирование Потребителя</h3>
    <form class="form-horizontal" method="Post">
        <div class="form-group">
            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.FamilyName)</label>
            <div class="col-sm-10">
                <input asp-for="FamilyName" class="form-control" type="text" placeholder="Например, Иванов">
                <span asp-validation-for="FamilyName" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.Name)</label>
            <div class="col-sm-10">
                <input asp-for="Name" class="form-control" type="text" placeholder="Например, Иван">
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.Name)</label>
            <div class="col-sm-10">
                <input asp-for="PaternalName" class="form-control" type="text" placeholder="Например, Иван">
                <span asp-validation-for="PaternalName" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.Sex)</label>
            <div class="col-sm-10">
                <select class="form-control" asp-for="Sex" style="width:200px;">
                    <option value="true"> Мужской</option>
                    <option value="false"> Женский</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.DateOfBirth)</label>
            <div class="col-sm-10">
                <input class="form-control" asp-for="DateOfBirth" type="date">
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>
        </div>

        <button type="submit" class="button"><span>Изменить</span></button>

        <script>
            var x, i, j, selElmnt, a, b, c;
            /*look for any elements with the class "custom-select":*/
            x = document.getElementsByClassName("custom-select");
            for (i = 0; i < x.length; i++) {
                selElmnt = x[i].getElementsByTagName("select")[0];
                /*for each element, create a new DIV that will act as the selected item:*/
                a = document.createElement("DIV");
                a.setAttribute("class", "select-selected");
                a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
                x[i].appendChild(a);
                /*for each element, create a new DIV that will contain the option list:*/
                b = document.createElement("DIV");
                b.setAttribute("class", "select-items select-hide");
                for (j = 0; j < selElmnt.length; j++) {
                    /*for each option in the original select element,
                    create a new DIV that will act as an option item:*/
                    c = document.createElement("DIV");
                    c.innerHTML = selElmnt.options[j].innerHTML;
                    c.addEventListener("click", function (e) {
                        /*when an item is clicked, update the original select box,
                        and the selected item:*/
                        var y, i, k, s, h;
                        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
                        h = this.parentNode.previousSibling;
                        for (i = 0; i < s.length; i++) {
                            if (s.options[i].innerHTML == this.innerHTML) {
                                s.selectedIndex = i;
                                h.innerHTML = this.innerHTML;
                                y = this.parentNode.getElementsByClassName("same-as-selected");
                                for (k = 0; k < y.length; k++) {
                                    y[k].removeAttribute("class");
                                }
                                this.setAttribute("class", "same-as-selected");
                                break;
                            }
                        }
                        h.click();
                    });
                    b.appendChild(c);
                }
                x[i].appendChild(b);
                a.addEventListener("click", function (e) {
                    /*when the select box is clicked, close any other select boxes,
                    and open/close the current select box:*/
                    e.stopPropagation();
                    closeAllSelect(this);
                    this.nextSibling.classList.toggle("select-hide");
                    this.classList.toggle("select-arrow-active");
                });
            }
            function closeAllSelect(elmnt) {
                /*a function that will close all select boxes in the document,
                except the current select box:*/
                var x, y, i, arrNo = [];
                x = document.getElementsByClassName("select-items");
                y = document.getElementsByClassName("select-selected");
                for (i = 0; i < y.length; i++) {
                    if (elmnt == y[i]) {
                        arrNo.push(i)
                    } else {
                        y[i].classList.remove("select-arrow-active");
                    }
                }
                for (i = 0; i < x.length; i++) {
                    if (arrNo.indexOf(i)) {
                        x[i].classList.add("select-hide");
                    }
                }
            }
            /*if the user clicks anywhere outside the select box,
            then close all select boxes:*/
            document.addEventListener("click", closeAllSelect);
        </script>

    </form>

    <p> @Html.ActionLink("Вернуться", "List")</p>
</div>
